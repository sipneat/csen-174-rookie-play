pipeline {
  agent any

  stages {
    stage('Build Docker Images') {
      steps {
        script {
          sh """
            docker build -f pipelines/docker/Dockerfile.frontend -t rookie-play-frontend:latest ./frontend
            docker build -f pipelines/docker/Dockerfile.backend -t rookie-play-backend:latest ./backend
          """
        }
      }
    }

    stage('Static Analysis') {
      steps {
        script {
          sh """
            docker run --rm rookie-play-frontend:latest npx eslint -f checkstyle . > eslint-report.xml || true
          docker run --rm rookie-play-backend:latest pylint --msg-template='{path}:{line}: [{msg_id}, {obj}] {msg} ({symbol})' . > pylint-report.txt || true
          """
          recordIssues tools: [esLint(pattern: 'eslint-report.xml')]
          recordIssues tools: [pylint(pattern: 'pylint-report.txt')]
        }
      }
    }

    stage ('Deploy with Docker Compose') {
      steps {
        sh """
          FRONTEND_PORT=5173 \
          BACKEND_PORT=3000 \
          BUILD_TAG=latest \
          docker compose -f pipelines/docker/docker-compose.yml -p rookie-play-release up -d
        """
      }
    }
  }

  post {
    success {
      echo "Deployed site: http://192.168.50.5:5173"
      echo "Backend API: http://192.168.50.5:3000"
      script {
        currentBuild.description = '<a href="http://192.168.50.5:5173" target="_blank">Open Deployed Site</a>'
        currentBuild.description += '<br>'
        currentBuild.description += '<a href="http://192.168.50.5:3000" target="_blank">Open Backend API</a>'
      }
    }
    failure {
      script {
        sh """
          docker compose -f pipelines/docker/docker-compose.yml -p rookie-play-release down -v
          docker rmi rookie-play-frontend:latest || true
          docker rmi rookie-play-backend:latest || true
        """
      }
    }
  }
}